/*! For license information please see coi-serviceworker.js.LICENSE.txt */
"undefined"==typeof window?(self.addEventListener("install",(()=>self.skipWaiting())),self.addEventListener("activate",(event=>event.waitUntil(self.clients.claim()))),self.addEventListener("message",(ev=>{ev.data&&"deregister"===ev.data.type&&self.registration.unregister().then((()=>self.clients.matchAll())).then((clients=>{clients.forEach((client=>client.navigate(client.url)))}))})),self.addEventListener("fetch",(function(event){"only-if-cached"===event.request.cache&&"same-origin"!==event.request.mode||event.respondWith(fetch(event.request).then((response=>{if(0===response.status)return response;const newHeaders=new Headers(response.headers);return newHeaders.set("Cross-Origin-Embedder-Policy","require-corp"),newHeaders.set("Cross-Origin-Opener-Policy","same-origin"),new Response(response.body,{status:response.status,statusText:response.statusText,headers:newHeaders})})).catch((e=>console.error(e))))}))):(()=>{const coi={shouldRegister:()=>!0,shouldDeregister:()=>!1,doReload:()=>window.location.reload(),quiet:!1,...window.coi},n=navigator;coi.shouldDeregister()&&n.serviceWorker&&n.serviceWorker.controller&&n.serviceWorker.controller.postMessage({type:"deregister"}),!1===window.crossOriginIsolated&&coi.shouldRegister()&&(window.isSecureContext?n.serviceWorker&&n.serviceWorker.register(window.document.currentScript.src).then((registration=>{coi.quiet,console.log("COOP/COEP Service Worker registered",registration.scope),registration.addEventListener("updatefound",(()=>{!coi.quiet&&console.log("Reloading page to make use of updated COOP/COEP Service Worker."),coi.doReload()})),registration.active&&!n.serviceWorker.controller&&(!coi.quiet&&console.log("Reloading page to make use of COOP/COEP Service Worker."),coi.doReload())}),(err=>{!coi.quiet&&console.error("COOP/COEP Service Worker failed to register:",err)})):!coi.quiet&&console.log("COOP/COEP Service Worker not registered, a secure context is required."))})();